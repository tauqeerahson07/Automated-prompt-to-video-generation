"""
Django settings for EnvisionBackend project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
import dj_database_url
from decouple import config
from datetime import timedelta

# Only load .env in development
if os.path.exists(Path(__file__).resolve().parent.parent / '.env'):
    from dotenv import load_dotenv
    load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


ROOT_DIR = BASE_DIR.parent  # This goes up one more level to the project root
ENV_FILE = ROOT_DIR / '.env'

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('Django_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

<<<<<<< HEAD
ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '0.0.0.0',
    'envision-nf6f.onrender.com',
]


# CORS_ALLOW_ALL_ORIGINS = True 
CORS_ALLOW_CREDENTIALS = True 
CSRF_TRUSTED_ORIGINS = ['https://envision-nf6f.onrender.com']

AWS_DEFAULT_ACL = None
AWS_QUERYSTRING_AUTH = False
=======
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '.onrender.com']

>>>>>>> parent of 22a5184 (chages done by tauqeer on karam's laptop)

# Application definition
INSTALLED_APPS = [
<<<<<<< HEAD
    'corsheaders',  # Move to top for proper CORS handling
=======
>>>>>>> parent of 22a5184 (chages done by tauqeer on karam's laptop)
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'RetrivalAPI',
    'rest_framework.authtoken',
    'rest_framework_simplejwt', 
    'djoser',
    'corsheaders',     
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'EnvisionBackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'EnvisionBackend.wsgi.application'

# Database with error handling
DATABASE_URL = os.getenv("SUPABASE_DB_URL")

DATABASES = {
    'default': dj_database_url.parse(
        DATABASE_URL,
        conn_max_age=600,
        conn_health_checks=True,
    )
}
    

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files configuration
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files (for user uploads) - local storage only
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS settings(For frontend)
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Allow Next.js frontend
    "http://192.168.40.1:3000",
    "https://envision-nf6f.onrender.com",
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=30),
<<<<<<< HEAD
    'REFRESH_TOKEN_LIFETIME': timedelta(days=365),
=======
    'REFRESH_TOKEN_LIFETIME': timedelta(days=365)\
>>>>>>> parent of 22a5184 (chages done by tauqeer on karam's laptop)
}